from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message, ReplyKeyboardRemove
import keyboard as kb
from config import channel
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from prediction import predict


rt = Router()


@rt.callback_query(F.data == 'check_sub')
async def first_check_sub(call: CallbackQuery, bot: Bot):
    user_channel_status = await bot.get_chat_member(chat_id=channel, user_id=call.from_user.id)
    if user_channel_status.status != 'left':
        await call.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!')
        await call.message.answer('–ü–æ–µ—Ö–∞–ª–∏üí•?', reply_markup=kb.go_kb)
    else:
        await call.answer('–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª')


class Form(StatesGroup):
    date = State()


@rt.callback_query(F.data == 'go')
async def first_prediction(call: CallbackQuery, state: FSMContext):
    await call.message.answer('–¢—ã –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É –≤ –≤–∏–¥–µ —á–∏—Å–ª–æ-–±—É–∫–≤–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä 17 –æ–∫—Ç—è–±—Ä—è), –∞ '
                              '—è —Ç–µ–±–µ –æ—Ç–ø—Ä–∞–≤–ª—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–æ–µ —Å —ç—Ç–æ–π –¥–∞—Ç–æ–π')
    await call.message.answer('–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É:')
    await state.set_state(Form.date)


@rt.message(Form.date)
async def date(msg: Message, state: FSMContext):
    try:
        if msg.text == '777':
            await predict(msg.text)
            await msg.answer(
                '```AVTO268``` ', parse_mode='MARKDOWN')
        elif msg.text == '1 –∞–ø—Ä–µ–ª—è':
            await predict(msg.text)
            await msg.answer('```750at```', parse_mode='MARKDOWN')
        else:
            day, month = msg.text.split(' ')[0], msg.text.split(' ')[1]
            if month == '—è–Ω–≤–∞—Ä—è' and 0 < int(day) < 32:
                await predict(msg.text)
            else:
                await msg.answer('–¢–µ–±–µ –ø–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —è–Ω–≤–∞—Ä—åüò¢')
                await state.clear()
    except:
        await msg.answer('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
